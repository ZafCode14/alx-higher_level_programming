The ``0-add_integer`` module
============================

Using ``add_integer``
---------------------

importing ``add_integer`` form the ``0-add_integer`` module:
	>>> add_integer = __import__('0-add_integer').add_integer


Test cases for adding integers and floats:

	>>> add_integer(1, 1)
	2
	>>> add_integer(0, -1.5)
	-1
	>>> add_integer(2)
	100
	>>> add_integer(-2, -2)
	-4

Test cases for when non integer is passed:
	
	>>> add_integer(1, "h")
	Traceback (most recent call last):
	TypeError: b must be an integer

	>>> add_integer("h", 1)
	Traceback (most recent call last):
	TypeError: a must be an integer

	>>> add_integer(None)
	Traceback (most recent call last):
	TypeError: a must be an integer

	>>> add_integer(1, None)
	Traceback (most recent call last):
	TypeError: b must be an integer

	>>> add_integer(1, float('inf'))
	Traceback (most recent call last):
	OverflowError: cannot convert float infinity to integer

	>>> add_integer(1, float("NaN"))
	Traceback (most recent call last):
	ValueError: cannot convert float NaN to integer
